- name: Copy aliases
  copy: 
    src=.bash_aliases 
    dest="{{ USER_PATH }}/.bash_aliases"
  tags: aliases

- name: Create mount point directories
  become: true
  file:
    path: "{{ item.MOUNT }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop: "{{ DRIVES }}"
  when: not (item.MOUNT is exists)
  tags: mount-disk

- name: Append disks config to fstab
  become: true
  blockinfile:
    path: /etc/fstab
    block: |
      {% for drive in DRIVES %}
      UUID={{ drive.UUID }} {{ drive.MOUNT }} {{ drive.FS }} defaults 0 0
      {% endfor %}
    state: present
    create: yes
    insertafter: EOF
  tags: mount-disk

- name: Mount disks
  become: true
  command: mount -a
  tags: mount-disk

- name: Create Media directory structure
  file:
    path: "{{ STORAGE }}/{{ item }}"
    state: directory
  loop: "{{ MEDIA_DIRECTORY_STRUCTURE }}"
  tags: directory

- name: Create user directory structure
  file:
    path: "{{ USER_PATH }}/{{ item }}"
    state: directory
  loop: "{{ USER_DIRECTORY_STRUCTURE }}"
  tags: directory

- name: Generate telegram_notification_disk.sh file and copy it
  template:
    src: telegram_notification_disk.j2
    dest: "{{ USER_PATH }}/scripts/cron/telegram_notification_disk.sh"
    owner: root
    group: root
    mode: '0755'
  tags: cron

- name: Create cron job for telegram_notification_disk.sh
  cron:
    name: "Disk space check"
    minute: "30"
    hour: "4"
    job: "{{ USER_PATH }}/scripts/cron/telegram_notification_disk.sh > /dev/null 2>&1"
  tags: cron

- name: Generate telegram_notification_argument.sh file and copy it
  template:
    src: telegram_notification_argument.j2
    dest: "{{ USER_PATH }}/scripts/telegram_notification_argument.sh"
    owner: root
    group: root
    mode: '0755'
  tags: telegram